export const ru = {
  omsMain: {
    statu: "Статус",
    orders: "Заказы",
    collectionList: "Список для сбора",
    packingList: "Список для упаковки",
    cargoSet: "Форма согласования отгрузки",
    productNotFound: "Не найденные товары",
    pastTransactions: "Прошлые транзакции",
    wayBillStatus: "Статус накладной",
  },
  OmsBarcodeSearchBar: {
    barcodeScanning: "Сканирование штрихкода",
    scanOrCode: "Сканировать или ввести код товара",
    qrRead: "QR-чтение",
    enterQR: "введите QR"
  },
  OmsCargoConsensusDatePopup: {
    orderDate: "Дата заказа",
    ok: "ОК",
    cancel: "Отмена",
  },
  OmsFilterCard: {
    sameDayHome: "Доставка на дом в тот же день",
    sameDayCome: "Приходи и забирай в тот \nже день",
    homeCargo: "Доставка на дом \nкурьерской службой",
    supplySource: "Источник снабжения",
    filter: "Фильтр",
    selectAll: "Выбрать все",
    assignSelected: "Назначить выбранные",
    orderQuantity: "Собрано количество заказов",
    refresh: "Обновить",
    assignment: "Назначить",
  },
  OmsOrderCard: {
    quantity: "Количество",
    closeDetails: "Закрыть детали",
  },
  OmsOrderTimeCard: {
    product: "товар",
    sameDayCome: "Приходи и забирай в тот же день",
    sameDayDelivery: "Доставка в тот же день",
    homeCargo: "Доставка на дом курьерской службой",
  },
  OmsPackageCard: {
    product: "товар",
    packed: "упаковка",
    allConfirm:
      "Все товары были проверены мной и я одобряю отправку заказчику.",
    parcelBagScanned: "Перед выбором коробки/пакета отсканируйте все товары",
    selectParselBag: "Выберите коробку/пакет",
    whyChooseList: "Выберите причину из списка",
    printIrsaliye: "Распечатать накладную",
    pleaseReadBarcode: "Пожалуйста, коробку/пакет отсканируйте штрих-код",
    requiredOrder: "В заказе имеется {{qty}} штук этого товара",
    enterNumberPackage: "Пожалуйста, введите количество пакетов",
    packageCannotBeLess:
      "Количество пакетов не может быть меньше количества чемоданов",
    packageCannotBeGreater:
      "Количество пакетов не может быть больше количества товаров",
    parcelPackageBarcode: "Штрих-код посылки/пакета",
    packageCount: "Количество пакетов",
    packageCountInfo:
      "Если все продукты не помещаются в одну упаковку/коробку, их необходимо разделить. Укажите, пожалуйста, сколько мешков/упаковок вы положите в продукты",
    packageAlreadyBeenMade: "Для этого заказа коробка/пакет уже выбран",
    packageNotCountInfo:
      "Обязательно отправлять канальные заказы в одной посылке/мешке, а в случае необходимости дробления заказа следует обращаться по адресу ecomlojistik.operasyon@flo.com.tr",
    packageQrNotCorrect:
      "QR, который вы прочитали, не относится к этому продукту",
    packageQrMissing: "Прочитайте все вопросы перед выбором посылки/сумки",
  },
  OmsQuantityPopup: {
    or: "или",
    collected: "количество товаров будут помечены как собранные, остальные",
    wilBeMarked: "будут помечены как",
    collectedLater: "Оставшиеся товары будут собраны позже",
  },
  OmsReaseonRadios: {
    selectReason: "Выберите причину в списке",
    continue: "Продолжить",
  },
  ProductPickCard: {
    product: "Товар",
    min: "мин",
  },
  ProductDetail: {
    color: "Цвет",
    date: "Дата",
    orderNo: " № заказа",
    barcode: "Штрихкод",
    cancelOrder: "Отменить заказ",
    cancel: "Отменить",
    areYouSure: "Заказ будет отменен, вы уверены?",
    productStatuNotCancel: "Статусы продуктов не подлежат отзыву",
    kdvAmount: "KDV количество",
    cancelOrderForStore: "Отменить заказ в магазине",
    inquireStock: "Запросить акции"
  },
  OmsCargoConsensus: {
    cargo: "Доставка",
    omsBarcode: "Штрихкод Oms",
    AcceptNo: "Номер приема",
    cargoWaiting: "Ожидающие доставку",
    printAll: "Распечатать все",
    printSelected: "Распечатать выбранные",
    printSuccesful: "Распечатано успешно",
    selectCargo: "Выбрать службу доставки",
    numberOrderList: "количество товаров создано",
    deSelect: "Убрать выбранные",
    selectAll: "Выбрать все",
    generateBarcode: "Распечатать штрихкод",
    generateConsensus: "Распечатать сверку",
    productList: "Список товаров",
    quantity: "Количество",
    bodySize: "Размер",
    color: "Цвет",
    brand: "Бренд",
    search: "Искать",
    iConfirmThatTheCourierHasArrived: "Подтверждаю прибытие курьера",
    readBeforeOrder: "Этот приказ был прочитан ранее",
    orderScanned: "Отсканированная вами посылка относится к фрагментированному заказу. Она не будет помечена, пока вы не отсканируете все {{qty}} штук",
    seeContent: "Посмотреть контент",
    qtyReadPackage: "Вы читаете {{qty}} пакетов",
    pleaseReadIBMOrOrderNo: "Пожалуйста, прочтите IBM/номер заказа",
    readOrders: "Чтение заказов",
  },
  OmsDashboard: {
    orders: "Заказы",
    assigned: "Назначен",
    notAssigned: "Не назначен",
    notAssignedOrdersDistribution: "Распределение \nНеназначенных товаров",
    sameDayHomeDelivery: "Доставка на дом в тот же день",
    sameDayComeAndGet: "Приходи и забирай в тот же день",
    homeDeliveryByCargo: "Доставка на дом курьерской службой",
    myCollectionList: "Мой список для сбора",
    collected: "Собрано",
    notCollected: "Не собрано",
    unCollectedDeliveryOfOrders: "Распределение \nНеназначенных товаров",
    packingList: "Список для упаковки",
    packed: "Упаковано",
    notPacked: "Не упаковано",
    unPackedScatterOfOrder: "Распределение \nНеназначенных товаров",
  },
  OmsOrders: {
    assignToSelected: "Назначить выбранному",
    cancel: "Отмена",
    noPendingOrders: "Нет ожидающего заказа",
    day: "д",
    hour: "ч",
    min: "мин",
    justNow: "только что",
  },
  OmsPackageList: {
    numberOfOrdersListed: "количество заказов собрано",
    orderNotFound: "Заказ не найден",
    afterThisOperationAreyousure:
      "После этого процесса отмена заказа будет невозможна.  Вы уверены?",
  },
  OmsPickList: {
    sameDayHomeDelivery: "Доставка на дом \nв тот же день",
    sameDayComeAndGet: "Приходи и забирай \nВтот же день",
    homeDeliveryByCargo: "Доставка на дом \nКурьерской службой",
    productNotFoundInTheList: "Отсканированный товар не найден в списке",
    collect: "коллекция",
  },
  OmsOrderHistory: {
    search: "Искать",
    orderNo: "Номер заказа",
    actionDate: "Дата действия",
    cargoConsensusDate: "Дата согласования отгрузки товара",
    inOrderStatus: "Статус заказа",
    collectionStatus: "Статус сбора",
    packagingStatus: "Статус упаковки",
    timeDistribution: "Распределение срока",
    transactionDate: "Статус операции",
  },
  OmsOrderHistoryActions: {
    orderCreated: "заказ создан",
    addedCollectionList: "Добавлено в список коллекций",
    package: "Пакет",
    cancel: "Отмена",
  },
  OmsWaybillStatus: {
    startDate: "Дата начала",
    endDate: "Дата окончания",
    orderNo: "Номер заказа",
    status: "Статус",
    time: "Время",
    cancel: "Отмена",
    printBarcode: "Отсканировать штрихкод",
    completeTheOrder: "Завершить заказ",
    startTime: "Время начала",
    endTime: "Время окончания",
  },
  OmsNotFoundProducts: {
    startDate: "Дата начала",
    endDate: "Дата окончания",
    search: "Искать",
    quantity: "шт.",
    cancelReason: "Причина отмены",
    orderNo: "Номер заказа",
    cancel: "Отмена",
    cancelDate: "Дата отмены",
  },
  OmsStoreChiefReport: {
    noItemsList: "Нет элементов в списке",
    mboxAreUSure:
      "все заказы в списке сбора пользователя добавятся в базу, вы уверены?",
    cancel: "Отмена",
    ok: "Продолжить",
    throwThePool: "Бросить в базу",
    thereIsPendingOrder: "Есть ожидающий заказ",
    collectList: "В списке сбора",
    packedList: "В списке упаковки",
    processCompleted: "Операция завершена",
    total: "Итого",
  },
  omsErrorReasons: {
    defective: "ДЕФЕКТ",
    misfire: "ОДНОПАРКА",
    productNotFound: "ТОВАР НЕ НАЙДЕН",
    sold: "ПРОДАНО",
    imageIsWrong: "ОШИБОЧНАЯ КАРТИНКА",
  },
  omsService: {
    ordersCannotCanceled:
      "Заказ не может быть отменен, так как накладная была выписана",
    orderCancelingError: "Произошла ошибка при отмене заказа",
    cancelTransactionQuestion:
      "Есть товары на стадии сбора, вы должны завершить либо отменить заказ.\n Вы хотите сейчас отменить ?",
    productHasFound: "Товар найден.",
    productAvailable: "Товар есть в наличии",
    allOrdersPackingCompleted:
      "На этом заказе есть другие товар(-ы). Нужно собрать все, чтобы они были отображены в списке упаковки",
    selectOrderAssign: "Выберите заказы для назначения",
    packageTransactionQuestion:
      "На данный момент есть заказ, который еще находится в упаковке. Хотите упаковать соответствующий заказ позже?",
    configurePackagegingProcess:
      "Настройте принтер прежде чем перейти на стадию упаковки",
    scannedBarcocedIncorrect: "Неправильный штрихкод",
    totalDecisQuestion1: "Общий обьем товаров в вашем заказе",
    totalDecisQuestion2: "отсканированный обьем ваших коробок",
    totalDecisQuestion3: "Подтверждаете?",
    parcelAndBagScanSuccess: "Штрихкод коробки/пакета был успешно отсканирован",
    selectParselAndBagWarning:
      "Вы не сможете выбрать коробку/пакет так как этикетка была распечатана!",
    suppressionFailed: "Не удалось распечатать этикетку, попробуйте позднее.",
    printingFailed: "Не удалось распечатать",
    configurePrinterBeforeWaybill:
      "Настройте принтер перед распечаткой накладной",
    cancel: "отменить",
    cancel2: "отменить",
    piecesAreRequiredProduct:
      "В этом заказе имеется {{qty}} количество данного товара",
  },
  menu: {
    help: "Помощь",
    other: "Другой",
    findProduct: "Найди товар",
    document: "Документ",
    home: "Главная страница",
  },
  inStoreOrdering: {
    basketTitle: "моя корзина",
  },
  floSmsValidationModal: {
    approve: "Подтвердить",
    cancel: "Откажись",
    validationCode: "Код подтверждения",
    information: "Введите код, отправленный по SMS",
  },
  floAutoComplete: {
    defaultPlaceholde: "Найдите район, улицу или проспект",
  },
  loginScreen: {
    username: "Имя пользователя",
    password: "Пароль",
    pleaseWait: "Подождите пожалуйста",
    signIn: "Авторизоваться",
    welcome: "Добро пожаловать",
    otherLogin: "Нажмите, чтобы войти с другой учетной записью"
  },
  profileDetailScreen: {
    personalInformation: "Персональные данныеr",
    name: "Имя",
    birthDay: "Дата рождения",
    email: "Адрес электронной почты",
    efficiencyRecord: "Регистрационный номер",
    department: "Позиция",
    position: "Задача",
    expenseCentre: "Центр затрат",
    expenseCentreName: "Название центра затрат",
    jobStartDate: "Дата начала работы",
  },
  profileScreen: {
    personalInformation: "Персональные данные",
    logOut: "Выйти",
    profile: "Профиль",
  },
  crmMainScreen: {
    title: "CRM",
  },
  basketCompleteScreen: {
    sentMessage: "Ссылка на заказ отправлена",
    gotoHome: "Вернуться на главный экран",
  },
  basketEmpty: {
    emptyMessage: "в корзине нет товаров",
  },
  basketScreen: {
    title: "моя корзина",
    size: "номер: ",
    try: "Лира",
    remove: "Удалить",
    campaignCode: "Код компании",
    apply: "Применить",
    product: "Товар",
    total: "Общий: ",
    shipmentPrice: "Стоимость доставки: ",
    subTotal: "Промежуточный итог",
    orderSummary: "итог заказа",
    confirmCard: "Подтвердить корзину",
  },
  completeBasketScreen: {
    pleaseWait: "Подождите пожалуйста...",
    validateUser: "Подтверждение клиента",
    title: "моя корзина",
    phone: "Мобильный телефон",
    apply: "Подтвердить",
  },
  orderReceivedScreen: {
    total: "Общий: ",
    shipmentPrice: "Стоимость доставки: ",
    subTotal: "Промежуточный итог",
    discount: "Скидка",
    orderSummary: "итог заказаi",
    try: "Лира",
    size: "Размер: ",
    count: "количество: ",
    successMessage: "СОДЕРЖАНИЕ ПЛАТЕЖА УСПЕШНО ОТПРАВЛЕНО ПО СМС",
  },
  documentScreen: {
    emptyMessage:
      "Gösterilecek öğe bulunamadıЭлемент для отображения не найден.",
    file: "Файл",
    picture: "Фотография",
    title: "Документ",
  },
  findBarcode: {
    manual: "Запросить вручную",
    enterBarcode: "Отсканируйте штрихкод",
    check: "запрос",
    title: "Запрос товара",
    camera: "Камера",
  },
  findBarcodeManual: {
    enterBarcode: "Введите номер штрихкода",
    enterGenericCode: "Введите общий номер",
    check: "запрос",
    title: "Запрос товара",
  },
  foundProduct: {
    emptyStock: "Нет",
    stock: "Есть",
    quantity: "количество",
    color: "Цвет",
    storeStock: "Сток магазина",
    priceAndLabel: "Цена и этикетка",
    firstCashPrice: "первоначальная цена",
    cashPrice: "Предварительная цена",
    firstInstallmentPrice: "Цена первого взноса",
    installmentPrice: "Стоимость рассрочки",
    printLabel: "Распечатай этикетку",
    priceEcom: "Цена (Ecom)",
    addBasket: "Добавить в корзину",
    productFeatures: "Особенности товара",
    brand: "Марка",
    model: "Модель",
    barcode: "Штрихкод",
    sku: "SKU",
    gender: "Пол",
    title: "Информация о товаре",
    omcStoc: "Поставка со склада OMC",
    findStore: "Поиск магазина",
    outletAndSeason: "Выпуск/Сезон",
    productCategory: "Категория продукта",
    productClass: "класс продукта",
    productClassInfo: "Информация о классе продукта",
    baseMaterial: "Основной материал",
    leatherInfo: "Информация о скине",
  },
  helpScreen: {
    title: "Помощь",
    contactUs: "Связаться с нами",
    links: "Вспомогательные ссылки",
  },
  linksScreen: {
    title: "Вспомогательные ссылки",
    linkNotFound: "Не найдено определенной ссылки на вашу учетную запись.",
    linksLoading: "Загрузка ссылок",
  },
  homeScreen: {
    noRecord: "Нет активных объявлений.",
    loadingAncs: "Загружается ...",
  },
  moreScreen: {
    title: "Другой",
    crmMainLink: "CRM Управление жалобами",
    printerConfig: "Этикетка",
    easyReturn: "Легкий возврат",
  },
  printerConfig: {
    listDeviceError: "Проблема с устройством bluetooth! ",
    pleaseSelectDevice: "Пожалуйста, выберите устройство!",
    pleaseSelectConfig: "Пожалуйста, выберите подтверждение этикетки",
    deviceNotFound: "Устройство не найдено",
    setSetingsAndPrintBarcode: "Отправить настройки и распечатать штрихкод",
  },
  announceMiddlewareAlerts: {
    fileLoadExceptionMessage:
      "Файлы не могут быть загружены. Попробуйте позже.",
    fileSystemPermissionError:
      "У вас нет разрешения на запись файлов. Проверьте права на приложение.",
    onlyFiles: "только задокументировано",
    noNotification: "Нет уведомления",
  },
  authMiddlewareAlers: {
    userNameOrPasswordIncorrect: "Имя пользователя или пароль неверны.",
  },
  messageBox: {
    ok: "Хорошо",
    cancel: "Откажись",
    delete: "Удалить",
    warning: "Предупреждение",
    information: "Информация",
    danger: "Ошибка",
    smsValidationCode: "SMS-код подтверждения",
    validate: "Подтверди",
    resened: "Отправь еще раз",
    stockOut1: "Товара нет в наличии!",
    stockOut2: "Еще раз",
    stockOut3: " в корзину",
    stockOut4: "хотите добавить??",
    add: "Добавить",
    settings: "настройки",
    allCollectOrders:
      "Вы собрали все товары, относящиеся к пронумерованному заказу",
    allCollect: "Все собрали",
    customerBasketNo: "Номер потребительской корзины",
    fitTicket:
      "Чтобы мы могли вам помочь, сделайте снимок экрана с этим предупреждением и создайте заявку в FIT.",
    verificationNotValid: "Ваш код подтверждения недействителен"
  },
  or: "или",
  errorMsgs: {
    printerConnectionLost: "Соединение с принтером закрыто. Переподключиться.",
    wrongUsernameOrPassword: "Имя пользователя или пароль неверны.",
    unexceptedError: "Что-то пошло не так. Пожалуйста, попробуйте еще раз.",
    printerUnexceptedError:
      "Возникла проблема с принтером. Выключите принтер и восстановите соединения.",
    allBasketRemovedQuestion: "Товары в корзине будут удалены. Вы уверены?",
    sessionTimeout: "Время вашей сессии истекло. Пожалуйста, войдите снова.",
    removeSelectedBasketQuestion:
      "Выбранная вами корзина будет удалена. Вы уверены?",
    pleaseEnterValidBarcode:
      "Пожалуйста, введите действительный номер штрихкода.",
    pleaseEnterValidGenericCode:
      "Пожалуйста, введите действительный общий номер.",
    sapServiceError: "Не удалось связаться со службой поддержки стока SAP",
    ecomServiceError: "Не удалось связаться со службой поддержки стока ECOM",
    productNotFound: "Товар не найден",
    filePermissionError:
      "У нас нет разрешения на просмотр файлов, вы хотите проверить разрешения приложения?",
    wrongStockAlert:
      "Ошибка в информации о наличии. Товар не может быть добавлен в корзину.",
    wrongAddress: "полностью заполните адресную информацию",
    emailRequiredNewCustomer:
      "При создании нового покупателя требуется адрес электронной почты.",
    sentToGenius:
      "Ваша корзина отправлена ​​на экран Genius. Вы можете продолжить свои транзакции оттуда.",
    recordSuccess: "Регистрация прошла успешно",
    recordUpdateFail: "Не удалось обновить запись",
    enterBarcode: "Нет информации о штрихкоде",
    completeLabelConfig: "Настройка ярлыка завершена",
    customerNameNotEmpty: "Заполнение ФИО обязательно",
    customerPhoneNotEmpty: "Заполнение номера телефона обязательно",
    customerAddressNotEmpty: "Заполнение адреса обязательно",
    basketCloseAlert: "Удалить из корзины. Вы уверены ?",
    customerAddressMinLengthError: "Пожалуйста, введите свой адрес в деталях",
    systemCurrentlyMaintenance:
      "В настоящее время система находится на обслуживании. Повторите попытку позже.",
    auth: {
      employeeInfoEmpty:
        "Не удается получить доступ к информации о пользователе, обратитесь в службу поддержки.",
      incorrectUsernameOrPassword: "Логин или пароль неверны",
      tokenNotFound: "Время вашей сессии истекло. Пожалуйста, войдите снова.",
    },
    omsStockNotFound: "Для этого продукта не могут быть сделаны запросы на наличие товара"
  },
  easyReturnFindFiche: {
    title: "Возврат / Обмен / Отмена",
    docNumber: "Найти документ",
    returnNumber: "Код возврата",
    scanDocNumber: "Включите камеру, чтобы отсканировать штрихкод документа",
    scanReturnNumber: "Откройте камеру для сканирования штрихкода возврата",
    enterDocNumber: "Введите номер документа",
    enterReturnNumber: "Введите код возврата / номер заказа.",
    query: "запрос",
    findDocument: "Найти документ",
    enterAINo: "Номер проверки дефектного продукта",
    AINo: "Обзор бракованного товара",
  },
  easyReturnCamera: {
    scanDocNumber: "Отсканируйте номер документа",
    scanReturnNumber: "Отсканируйте код возврата",
    infoText: "Покажите штрихкод камере",
    scanAINo: "Отсканируйте контрольный номер дефектного продукта",
    dontCameraAuthority: "У вас нет разрешения на использование камеры",
  },
  easyRerturnFindFicheManual: {
    title: "Найти документ",
    store: "Выберите Магазин",
    date: "Дата",
    paymentType: "Выберите способ оплаты",
    scanProductBarcode: "Включите камеру, чтобы отсканировать штрихкод товара",
    enterProductBarcode: "Введите штрихкод товара",
    query: "запрос  ",
    dtpOk: "Хорошо",
    dtpCancel: "Очистить",
    dtpTitle: "Выберите дату",
    enterGsm: "Номер телефона",
  },
  easyReturnFicheList: {
    continue: "Продолжить",
    ficheNumber: " Найти документ ",
    customerName: "Имя покупателя:",
    price: "Сумма: ",
    date: "Дата: ",
    phone: "Телефон: ",
    size: "Размер: ",
    quantity: "количество: ",
    orderNotCancelled: "Этот чек не подлежит возврату.",
    title: "Список чеков",
    str: "Магазин. :",
  },
  easyReturnSelectReturnType: {
    title: "Способ возврата",
    total: "Общий : ",
    remain: "Остаток : ",
    reminder: "Сдача ",
    printDoc: "",
    completeTransaction: "Заверши возврат",
    headerTotalAmount: "Общая сумма к возврату",
    selectPaymentType: "Выберите способ возврата",
  },
  easyReturnSelectProduct: {
    infoText1:
      "Обратите внимание на то, что вы обмениваете товары с неиспользованными и неотрезанными этикетками.",
    infoText2:
      "Обратите внимание на то, что вы обмениваете товары с неиспользованными и неотрезанными этикетками.",
    infoText3:
      "Отменить можно только то, что не отправлено. Все товары, которые не были отправлены, будут отменены.",
    size: "Размер",
    quantity: "количество",
    price: "Цена товара",
    sellPrice: "Цена продажи",
    returnReason: "Пожалуйста, выберите причину возврата",
    pickQuantity: "Пожалуйста, выберите количество",
    title: "Перечень товаров",
    return: "Возвратde",
    change: "Обмен",
    cancel: "Отмена",
    productBarcode: "Штрихкод товара",
    pleaseBarcodeScan:
      "Напишите штрихкод товара, который нужно обработать или отсканируйте его с помощью камеры.",
    pleaseSelectProduct: "Пожалуйста, выберите товар, который хотите вернуть",
    continueTo: "продолжить с количеством товара",
    selectProduct: "Выбрать товар",
  },
  headerComponent: {
    search: "Поиск",
  },
  iso: {
    baskets: "Мои корзины",
    orderSummaryInfo: "Вы можете просмотреть сводку корзины",
    noActiveBasket: "Нет активной корзины",
    basket: "Корзина:%{basketCount}",
    creator: "Создал:%{creator}",
    basketTitle1: "Мои корзины",
    basketTitle2: "Номер корзины:%{basketID}",
    basketTitle3: "Моя корзина (%{basketID})",
    color: "Цвет: ",
    size: "Размер: ",
    omcStock: "Поставка со склада OMC",
    orderSummary: "Сводка заказа (продукт%{productCount})",
    total: "Общий: ",
    addCustomerAddress: "Добавить адрес клиента",
    payment: "Платежные операции",
    loadingBaskets: "Корзины загружаются",
    order: "№ корзины:",
    ok: "Хорошо",
    cancel: "Отменить",
    omcMessage:
      "В вашей корзине есть товары, приобретенные с магазина. Эти товары должны быть отправлены покупателю прямо сейчас",
    omsOmniStockError:
      "Для того, чтобы ваша корзина была отправлена в кассу, необходимо добавить не менее 1 ОМНИ-запаса",
    oneByeOneChange: "Процесс обмена один на один"

  },
  easyReturnBarcodeHearder: {
    customerName: "Имя покупателя: ",
  },
  easyReturnBrokenProductCompletePopup: {
    validationSms: "В первую очередь требуется смс-верификация.",
    printDocument:
      "Сначала вы должны распечатать документ о дефектном продукте.",
    sendAgain: "Отправь еще раз",
    sendValidationCode: "Отправить код подтверждения",
    validationCode: "Код подтверждения",
    approve: "Подтвердить",
    completeTransaction: "Завершить транзакцию",
    recordCreated: "Номер записи о дефектном продукте.",
    idesDocumentRecordPopupMessageBox: "Une fois le processus terminé, aucune modification ne peut être apportée. Confirmez-vous que toutes les transactions ont été entièrement complétées?"
  },
  easyReturnProductCard: {
    continueWithProduct:
      "Вы можете продолжить только с одним дефектным товаром",
    pleaseGiveReason: "Укажите причину возврата",
  },
  servicesApplicationGlobalService: {
    reopenTheApp:
      "Вы должны повторно открыть приложение, чтобы внесенные вами изменения вступили в силу.",
  },

  servicesEasyReturnService: {
    productsAreHere: "Товары здесь",
    voucherNotFound: "Чек не найден",
    errorTryAgain: "Произошла непредвиденная ошибка. Повторите попытку позже.",
  },
  cancellationScreen: {
    smsApprove: "SMS-подтверждение",
    smsApproveCode: "Пожалуйста, введите проверочный код",
    verify: "Проверить",
    resend: "Переотправить",
    orderNo: "№ заказа",
    billNo: "№ чека",
    customerName: "Имя Клиента",
    customerPhone: "Номер телефона клиента",
    date: "Дата",
  },
  crmCaseDetailScreen: {
    noChange: "Никаких изменений не было.",
    selectMissionStatus: "Вы можете выбрать задачу",
    enterDescription: "Требуется описание решения.",
    task: "Задача",
    taskDetails: "Детали запроса",
    beingRecorded: "Сохраняется",
    save: "Сохранить",
  },
  crmCrmMainScreen: {
    loading: "Загрузка записей ...",
    noOpenRecordsFound: "открытых записей не найдено",
  },
  crmTaskView: {
    noPhotoAllowed:
      "Разрешения на доступ к фотографиям нет. Включите авторизацию доступа в настройках и попробуйте еще раз.",
    searchJobStatus: "Вы можете искать статус задачи  ",
    chooseTheRightTeam: "Вы можете выбрать или найти нужную команду",
  },
  modalRoleGroup: {
    SoryNoAuthorization:
      "Извините, у вас нет прав для просмотра этого экрана.  ",
  },
  newVersion: {
    goto: "Перейти к новой версии",
    requiredNewVersionMessage: "Доступно обязательное обновление.",
    updateAwailable: "Есть новая версия приложения.",
    jailBrokenMessage:
      "The application is closed for use with JailBreak, Root, Emultor.",
    jailBrokenOkButton: "Ok",
    appTypeRequired:
      "Выпущена новая версия FLO Digital. Пожалуйста, загрузите сейчас, чтобы продолжить использование приложения",
  },
  crmCaseCard: {
    createdon: "Дата создания :",
    ticketNumber: "номер билета",
    remainingTime: "оставшееся время",
  },
  crmCustomerComplaintList: {
    newRecord: "Создать новую запись",
    active: "Эффективный",
    solved: "Решено",
    cancelled: "Отменено",
    customerComplaintManagement: "Управление жалобами клиентов",
    title: "Управление жалобами клиентов",
    demandFilter: "Фильтр статуса запроса",
    enterPhone: "Введите номер телефона",
    noRecord: "Записей не найдено",
  },
  crmNavSceen: {
    caseManagement: "управление жалобами",
    customerComplaintManagement: "управление жалобами клиентов",
    checkOrder: "Порядок запроса",
  },
  crmFindOrderScreen: {
    orderFicheNo: "Номер заказа/чека",
    title: "Порядок запроса",
    or: "или",
    ficheNumber: "Номер чека",
    enterNumber: "введите номер",
    execCheckOrder: "запрос",
    checkOrder: "Порядок запроса",
    ficheNo: "ваучер нет",
    findFiche: "найти фише",
  },
  crmOrderDetailScreen: {
    title: "Информация для заказа",
    ficheNumber: "Номер чека",
    createdStore: "Магазин, создавший заказ",
    shippingStore: "Место поставки",
    supply: "Поставка :",
    status: "Ситуация :",
    productQuantity: "{{qty}} количество товара",
    customerName: "Имя клиента Фамилия ",
    orderNum: "Номер заказа:",
    createdon: "Дата создания :",
    phone: "Номер телефона клиента:",
    amount: "Цена продажи",
    totalAmount: "Общая сумма",
  },
  crmCrmCreateCustomerComplaint: {
    errorMessage: "Что-то пошло не так",
    cancel: "Отмена",
    settings: "настройки",
    filePermissionError:
      "У нас нет разрешения на просмотр файлов, вы хотите проверить разрешения приложения?",
    newCustomerComplaint: "новая жалоба клиента",
    cancelCustomerComplaint: "жалоба клиента(Отменено)",
    customerComplaint: "жалоба клиента",
    store: "магазина",
    eCommerce: "электронная коммерция",
    complaintTitle: "Заголовок",
    firstName: "Имя Клиента",
    lastName: "Фамилия клиента",
    orderNum: "Номер заказа:",
    CustomerPhone: "Номер телефона клиента",
    solveTextPlaceholder: "Описание решения",
    description: "Объяснение",
    photoWarning:
      "**Добавленные фотографии нельзя удалить или изменить после записи, можно добавить максимум 2 фотографии.",
    assigneeTeam: "Назначенная команда",
    update: "Обновить",
    cancelRequest: "отменить запрос",
    save: "Сохранить",
    requestType: "Выберите тип запроса",
    ecomStockOut: "Недостаточный запас электронной коммерции",
  },
  crm: {
    createdDate: "Дата создания: {{createDate}}",
    serviceRequesNum: "Номер запроса на обслуживание",
    orderNum: "Номер заказа",
    shipmentNum: "Номер доставки",
    productNum: "Номер товара",
    uibNum: "Номер UIB",
    title: "Тема",
    assigneeTeam: "Назначенная команда",
    detail: "Деталь",
    caseDetail: "Детали жалобы",
    save: "Сохранить",
    checkOrder: "Порядок запроса",
    enterNumber: "введите номер",
    caseManagement: "Управление жалобами",
    caseNotFound: "открытых записей не найдено",
  },
  intro: {
    next: "дальше",
    complete: "Закончите",
    intro1: {
      title1: "в FLO Digital",
      title2: "Добро пожаловать!",
      description:
        "Мы так рады, что вы присоединились к семье FLO! Мы подготовили это приложение для вас, чтобы сделать вашу работу проще",
    },
    intro2: {
      title1: "то что тебе нужно",
      title2: "мы всегда с тобой",
      description:
        "Мы всегда будем рядом, чтобы вы могли мгновенно ответить на запросы клиентов",
    },
    intro3: {
      title1: "Давай,",
      title2: "Давайте начнем!",
      description: "Будь яркой звездой магазина",
    },
  },
  isoProduct: {
    color: "Цвет",
    size: "Размер",
    priceLabel: "Ценник",
    firstPrice: "Начальная цена продажи",
    salesPrice: "Цена продажи",
    firstInstallmentPrice: "Цена первого взноса",
    installmentPrice: "Стоимость рассрочки",
    storeStock: "Сток магазина",
    ecomStock: "OMNI СТОК",
    findStore: "Поиск магазина",
    outletDontSoldMessage:
      "Товары оутлет не могут быть проданы через FLO Digital",
    barcode: "штрих-код",
    generic: "общий",
    alternativeProducts: "альтернативные продукты",
    hide: "Скрывать",
    seeAll: "Увидеть все",
  },
  isoCamera: {
    permissionError: "Нет авторизации доступа к камере",
  },
  isoNewAddress: {
    title: "Добавьте новый адрес",
    phonePlaceHolder: "Найдите адрес с помощью мобильного телефона",
    shipmentAddressCreate: "Добавление адреса доставки",
    newCustomer: "Новый покупатель",
    name: "имя",
    lastname: "Фамилия",
    email: "Эл. почта",
    phone: "Телефон",
    city: "провинция",
    district: "округ",
    neighbourhood: "Район",
    address: "адрес",
    save: "сохранить адрес",
  },
  isoBasket: {
    color: "Цвет: ",
    size: "Размер: ",
    awailableStockMessage:
      "Для этого продукта можно приобрести не более {{кол}}",
    storeStock: "Сток магазина",
    ecomStock: "OMNI СТОК",
    totalPrice: "Итоговая цена:",
    editCustomerAddress: "Изменить адрес клиента",
    addCustomerAddress: "Добавить адрес клиента",
    paymentProcess: "Процесс оплаты",
    completeBasket: "Подтвердить корзину",
    customerCartNo: "Номер корзины клиента",
    ok: "Хорошо",
    showMssMessage:
      "Изменения доступны в корзине. Пожалуйста, прежде чем продолжить, повторно отправьте клиенту информационное SMS-сообщение, нажав на кнопку обработки платежа",
    deleteProductMessage:
      "Вы уверены, что %{productName} будет удален из вашей корзины?",
  },
  isoBarcodeCheck: {
    myBaskets: "Мои корзины",
    myBasketsDescription: "Вы можете просмотреть сводку корзины",
    barcodeNumber: "№ штрихкода",
    query: "запрос",
    genericEnterValid: "Пожалуйста, введите правильный артикул",
    barcode: "Штрих-код",
    generic: "Артикул",
    genericEnter: "Введите номер артикула",
  },
  isoAddressList: {
    title: "адреса",
    newAddress: "+ добавить новый адрес",
    next: "Следующий шаг",
    selected: "Выбрано",
  },
  isoStoreList: {
    inStock: "Имеется в наличии",
    lastStock: "Последний  {{stock}} сток",
    stockOut: "Имеется в наличии",
    stock: "{{stock}} сток",
  },
  drawer: {
    logout: "Выйти",
  },
  tabbar: {
    home: "Главная страница",
    processBtnTxt: "Транзакции",
  },
  mainScreen: {
    announcement: "объявления",
    links: "Полезные ссылки",
    crm: "CRM",
    printer: "Этикет",
    welcome: "Добро пожаловать",
    find: "Искать что-нибудь ..",
    oms: "OMS",
  },
  warehouseRequest: {
    waiting: "В ожидании",
    completed: "Завершено",
    created: "Оформленные заказы",
    title: "Запрос товара со склада",
    requestNote: "Комментарии торгового представителя : %{note}",
    completeNote: "Комментарии персонала склада : %{note}",
    requestTitleWithStatus: "Запрос товара - %{status}",
    statusWaiting: "В ожидании",
    statusFound: "Статус: Товар найден",
    statusStatusNotFound: "Статус: Товар не найден",
    requestTitle: "Запрос товара",
    completedFrom: "Операция завершена %{person}. %{dateStr}",
    requestMessage:
      "Товар со штрих-кодом %{barcode},  модель %{model}, цвет %{color}, размер %{size}, артикул %{sku} был запрошен персоналом %{employeeName}",
    takeTransaction: "Провести операцию",
    foundProduct: "Товар найден",
    notFoundProduct: "Товар не найден",
    iso: {
      requstButtonTitle: "Запросить со склада",
      enterNote: "Пожалуйста, введите описание",
      assignPersonNotFound: "Не найден персонал для назначения",
      selectAssignPerson: "Выберите человека для назначения",
      warehouseRequestCreatedMessage: "Запись склада успешно создана",
      warehouseRequestCreatedError: "Не удалось создать запись склада",
      warehouseRequestCreatedSelectPersonMessage:
        "До создания запроса на склад должен быть выбран персонал",
      completeButtonText: "Завершить операцию",
      cancel: "Отменить",
      ok: "Хорошо",
      warehouseRequestNoProduct: "На складе для этого продукта не определен персонал"
    },
    productDelivered: "Товар доставлен",
    productNotDelivered: "Товар не может быть доставлен",
    requestCancelledMessage: "Запрос будет отклонен. Вы уверены?",
    yes: "Да",
    no: "Нет",
    cancel: "Отменить",
    createdAt: "Дата создания : %{date}",
    noRecordsList: "Нет записей для списка",
    cancelReason: "Причина отмены",
    aReasonMustBeChosen:
      "Если товар не найден, необходимо выбрать причину из списка.",
    operationFailed: "Транзакция не выполнена",
    operationSuccessfully: "Операция успешно выполнена",
    digitalStore: "цифровой магазин",
  },
  basketPriceZeroError:
    "Этот продукт не может быть добавлен в корзину. Ошибка  в информации о товаре",
  cancelList:
    "Только ваши непоставленные продукты будут отменены.Если вы завершите процесс отмены, все товары в заказе будут отменены.",
  be: {
    errors: {
      cardBilled:
        "Поскольку оплата за эту корзину была получена, изменения не могут быть внесены",
      basketCheckout:
        "Оплата этой корзины производится на кассе, изменения не могут быть внесены",
      basketNotFound: "Корзина не найдена",
    },
  },
  completionOfSalesShortageMainScreen: {
    title: "Завершение продажи",
    titleTwo: "Список товара, снятых с продажи",
    comboboxOne: "Категория",
    comboBoxTwo: "Группа товара",
    comboBoxThree: "Наименование бренда",
    comboBoxFour: "Пол",
    textInput: "Отсканируйте или введите артикул",
    start: "Начало",
    end: "Конец",
    color: "Цвет:",
    size: "Размер:",
    date: "Дата:",
    stockQuantity: "Остаток товара:",
    orderNumber: "Номер заказа:",
    barcode: "Штрихкод:",
    buttonOne: "Вынести в продажу",
    buttonTwo: "Выберите причину из списка",
    popUpButton: "Продолжить",
    buttonThree: "Поиск",
    buttonFour: "Создать рабочего задания",
    notFound: "Товары для размещения в списке не найдены",
    createDate: "История:"

  },
  completionOfSalesShortageAlarmScreen: {
    menuButtonText: "Автоматическая настройка рабочего порядка",
    mondayShort: "Пн",
    tuesdayShort: "Вт",
    wednesdayShort: "Ср",
    thursdayShort: "Чт",
    fridayShort: "Пт",
    saturdayShort: "Сб",
    sundayShort: "Вс",
    emptyStateText: "У вас нет напоминания.",
    deleteItemsCount: "Было выбрано {{qty}} позиций.",
    save: "Сохранять",
    hour: "Час",
    minute: "Минута",
    dateNotSelectError: "Пожалуйста, выберите день."
  },
  report: {
    totalSalesCount: "",
    totalPerformance: "",
    totalDepositedShelfPercentage: "",
    completionOfSalesShortageReport: "Отчеты о дефиците продаж",
    salesLossReport: "Отчеты о потерях продаж",
    floDigitalUsageReport: "Отчеты об использовании Flo Digital",
    startDateError: "Дата начала не может быть больше даты окончания.",
    endDateError: "Дата окончания не может быть раньше даты начала.",
    counts: "цифры",
    totalOrderCount: "Топлам и Эмри Сайысы",
    completedOrderCount: "Тамамланан и Эмри Сайысы",
    depositedToShelf: "Деподан Рейона Чикарылан",
    productOnShelf: "Рейондаки Урюн",
    productNotFound: "Булунамаян юрюн",
    productSingle: "один продукт",
    defective: "дефектный продукт",
    notProcessed: "Никаких действий не принимается",
    times: "Продолжительность (минуты)",
    averageCompletedCreationTime: "Среднее время появления завершенных",
    averageCompletedTime: "Среднее время завершения",
    performance: "Производительность",
    performancePercentage: "Производительность (%)",
    firstCompletedRecordDate: "Время выдачи первого заказа на работу",
    lastCompletedRecordDate: "Время выдачи последнего рабочего заказа",
    reportNotFound: "Между указанными датами не найдено подходящего отчета.",
    completionOfSalesShortageRequestNotFound: "Никакого запроса на восполнение дефицита продаж не поступало.",
    completionOfSalesShortageTitle: "Оценка дефицита продаж {{storeName}} в период с {{startDate}} по {{endDate}}",
    floDigitalUsageTitle: "Оценка использования Flo Digital в период с {{startDate}} по {{endDate}}",
    salesLossTitle: "Оценка потерь продаж в период с {{startDate}} по {{endDate}}",
    salesLossNotFound: "Никаких потерь в продажах не обнаружено.",
    salesLossRequestCount: "Общее количество запросов на акции",
    salesLossNoStock: "нет в наличии",
    potencialSalesLoss: "Потеря потенциальных продаж",
    salesLossSalesCountFromOthers: "Количество потерянных продаж",
    dateNotFound: 'Нет данных',
    automaticWorkOrderHours: "Часы автоматического заказа на работу определены {{startDate}}"
  },
  storeWarehouse: {
    warehouseOperations: "Складские операции",
    warehouseIdentification: "Идентификация склада",
    warehouseUnitIdentification: "Идентификация складской единицы",
    productPlacementInTheWarehouse: "Размещение продукции на складе",
    rayonIdentification: "Идентификация полок",
    userAssignments: "Назначения пользователей",
    removeProductFromWarehouse: "Удалить товар со склада",
    warehouseActivityReport: "Отчет о деятельности склада",
    productSearch: "Поиск продукта",
    warehouseInventoryReport: "Отчет об инвентаризации склада",
    warehouseScreen: "Экран склада",
    warehouseName: "Название склада",
    description: "Описание",
    add: "Добавить",
    cancel: "отмена",
    delete: "Удалить",
    edit: "Редактировать",
    selectWarehouse: "Выберите склад",
    selectAll: "Выбрать все",
    addUnit: "Добавить подразделение",
    unitName: "Имя единицы",
    done: "сделанный",
    search: " Поиск",
    qrPrinting: "Печать QR",
    warehouseProductPlacement: "Размещение продукции на складе",
    scanEnterQr: "Считывание / ввод Qr",
    scanEnterBarcode: "Сканирование / ввод штрих-кода",
    camera: "Камера",
    barcode: "Штрих-код",
    warehouse: "Склад",
    noRayonFound: "определенная полка не найдена",
    rayonName: "название полки",
    warehouseUserList: "Список пользователей склада",
    rayon: "полка",
    noDefinedWarehouseUserFound: "Не найдено ни одного определенного пользователя склада",
    selectStaff: "Выбрать сотрудников",
    definedAisleUserNotFound: "Пользователь не найден в определенном стеллаже",
    selectSection: "Выберите полку",
    readEnterUnitQR: "Считывание / ввод QR единицы товара",
    removeAllProductsfromTheUnit: "удалить все тома в блоке",
    removeAllProductsFromTheWarehouse: "Удалить все товары со склада",
    allProductsWarehouseDeleted: "Все продукты на складе будут удалены! Вы хотите продолжить?",
    confirm: "Подтвердить",
    allProductsUnitDeleted: "Все товары в подразделении будут удалены! Вы хотите продолжить?",
    warehouseReports: "Отчеты о работе склада",
    startDate: "Дата начала",
    endDate: "Дата окончания",
    noSuitableReportsSpecifiedDates: "Не найдено подходящих отчетов между указанными датами.",
    theStartDateCannotGreaterEndDate: "Начальная дата не может быть больше конечной даты",
    warehouseProductSearch: "Поиск товаров на складе",
    allWarehouses: "Все склады",
    unitReport: "отчет по единице",
    productReport: "Отчет о продукции",
    search1: "Поиск",
    warehouseProductRequests: "Запросы на продукцию склада",
    workOrders: "Рабочие заказы",
    completedTransactions: "Выполненные операции",
    addressInformation: "Информация об адресах",
    sKU: "SKU",
    definition: "Описание",
    requestedUser: "Запрошенный пользователь",
    requestTime: "Время запроса",
    requestNote: "Примечание к запросу",
    status: "Статус",
    process: "Операция",
    putIntoProcess: "Процесс",
    refresh: "Обновить",
    noWarehouseFound: "Склад не найден",
    productRequests: "Запросы на продукцию",
    aisleDeviceIdentification: "Идентификация устройства Reyon",
    save: "Сохранить",
    sureWantSaveProducts: "Вы уверены, что хотите сохранить продукты ?",
    shelf: "Полка",
    totalNumberBarcodes: "Общее количество штрих-кодов",
    sureWantDeleteDefinedUser: "Вы уверены, что хотите удалить определенного пользователя?",
    user: "Пользователь",
    addUserWarehouse: "Добавить пользователя на склад",
    theEndDateCannotBeforeStartDate: "Дата окончания не может быть раньше даты начала.",
    totalNumberRequests: "Общее количество запросов",
    realized: "Реализовано",
    unrealized: "Не реализовано",
    timesMinutes: "Время (минуты)",
    numberValidRequests: "Количество действительных запросов",
    average: "Среднее",
    shortest: "Самый короткий",
    longest: "Самый длинный",
    median: "Медиана",
    noRequestsWarehouse: "Запросы со склада не поступали.",
    evaluationProductRequestsWarehouse: " Оценка заявок на продукцию со склада в период с {{startDate}} по {{endDate}}",
    completedWorks: "Выполненные работы",
    address: "Адрес",
    size: "размер",
    requestor: "Запрашивающий",
    demandStatus: "Статус заявки",
    productNotFound: "Продукт не найден",
    completed: "Завершено",
    requestUnrealized: "Запрос не реализован",
    noPendingWorkOrders: "Нет отложенных заказов на работу",
    noWorkCompleted: "Не найдено ни одного завершенного исследования",
    requestingUser: "Запрашивающий пользователь",
    new: "Новый",
    inProcess: "В процессе",
    ok: "OK",
    code: "Код",
    aisleDevices: "Стеллажные устройства",
    name: "имя",
    code1: "Код",
    recordNotFound: "Запись не найдена",
    selectFile: "Выберите файл",
    selectFile1: "Выберите файл",
    pleaseMakeSureBarcodeShelfEnteredCorrectly: "Убедитесь, что поле «Штрих-код» и «Единица хранения» введены правильно!",
    fileEmptyFormattedIncorrectly: "Файл пуст или неправильно отформатирован!",
    operationSuccessful: "Операция выполнена успешно",
    problemOccurredDuringDrocessingMessage: "Во время обработки возникла проблема. \Пожалуйста, проверьте предоставленную информацию, убедитесь, что все поля заполнены и штрих-код введен правильно. Если проблема сохраняется, обратитесь в службу технической поддержки с документом о транзакции."
  },
  mertechPrinter:{
    bluetoothEnable: "Пожалуйста, включите Bluetooth на вашем телефоне.",
    open: "Голодный",
    cancel: "сдаться"
  }
};
